<?xml version="1.0" encoding="UTF-8" ?>
<Module>
	<ModulePrefs title="Call Trace" description="Call Trace gadget"
		author="Jeff Yu" author_email="jeff.yuchang@gmail.com">
		<Require feature="views"/>
		<Require feature="setprefs"/>
		<Require feature="tabs"/>
	</ModulePrefs>
	<UserPref name="serviceUrl" display_name="Service URL:"
		default_value="http://localhost:8080/overlord-bam/acm/query" />
	<UserPref name="refreshCycle" display_name="Refresh Interval(sec):"
		default_value="30" datatype="enum">
		<EnumValue value="30" />
		<EnumValue value="60" />
		<EnumValue value="120" />
		<EnumValue value="180" />
		<EnumValue value="300" />
	</UserPref>

	<Content type="html"><![CDATA[
	<style type="text/css">
		#tree {width:90%;}
		#detail {border:1px solid #69C; border-collapse: collapse;font-family: "Lucida Sans Unicode", "Lucida Grande", Sans-Serif; font-size: 9pt;margin:10px;}
		#detail thead th {font-weight: normal;font-size: 9pt; color:#039;border-bottom: 1px dashed #69C; text-align: left;}
		#detail tbody td {text-align: left;vertical-align: top;color: #669; padding: 2px 2px; }
		#detail tbody th {text-align: right;vertical-align: top;color: #669; padding: 2px 2px; }
   </style>
   
	<link href="skin/ui.dynatree.css" rel="stylesheet" type="text/css">
	<script type="text/javascript" src="jquery.min.js"></script>
	<script type="text/javascript" src="jquery.cookie.js"></script>
	<script type="text/javascript" src="jquery-ui.custom.min.js"></script>
	<script type="text/javascript" src="jquery.dynatree.min.js"></script>
   
   <script type="text/javascript">
	
	function makeJSONRequest(){
	    var restUrl = "http://localhost:8080/gadgets/calltrace-gadget/calltrace.json";
		var params = {};
		var prefs = new gadgets.Prefs();
		params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.JSON;
		params[gadgets.io.RequestParameters.REFRESH_INTERVAL] = prefs.getInt("refreshCycle");
		params[gadgets.io.RequestParameters.METHOD] = gadgets.io.MethodType.GET;
   		
   		gadgets.io.makeRequest(restUrl, updateResponse, params);
	}
	
	function updateResponse(response) {
		var data = response.data;
	   	var treeData = new Array(data.tasks.length);
	   	for(var i = 0; i < treeData.length; i++) {
	   		var task = data.tasks[i];
	   		treeData[i] = convertJsonToTreeData(task);
	   	}
	
	   	initialiseTree(treeData);
	   	$("#detail").hide();
	}
	
	  function convertJsonToTreeData(task) {
	  	    var treeObject = {};
	  		var isCall = (task.type == "Call");
	  		if (isCall) {
	  			treeObject["title"] = getTruncatedTitle(task.component + " " + task.operation) + " [" + task.duration + " ms] (" + task.percentage + "%)";
	  			treeObject["isFolder"] = true;
	  			treeObject["request"] = escapeHTML(task.request);
	  			treeObject["response"] = escapeHTML(task.response);
	  			treeObject["fault"] = escapeHTML(task.fault);
	  			treeObject['component'] = task.component;
	  			treeObject['operation'] = task.operation;
	  			treeObject['duration'] = task.duration;
	  			treeObject['percentage'] = task.percentage;
	  			treeObject['type'] = task.type;
	  			if (task.fault == undefined) {
	  				treeObject['addClass'] = 'success';
	  			} else {
	  				treeObject['addClass'] = 'error';
	  			}

	  		} else {
	  			treeObject["title"] = getTruncatedTitle(task.description) + " [" + task.duration + "ms] (" + task.percentage + "%)";
	  			treeObject["isFolder"] = false;
	  			treeObject['description'] = task.description;
	  			treeObject['duration'] = task.duration;
	  			treeObject['percentage'] = task.percentage;
	  			treeObject['type'] = task.type;
	  		}

	  		if (task.tasks != undefined) {
	  			var children = new Array(task.tasks.length);
	  			for (var i = 0; i < task.tasks.length; i++) {
	  				var theTask = task.tasks[i];
	  				children[i] = convertJsonToTreeData(theTask);
	  			}
	  			treeObject["children"] = children;
	  		}
	  		return treeObject;

  }

	  function initialiseTree(data) {	  	
	    // Attach the dynatree widget to an existing <div id="tree"> element
	    // and pass the tree options as an argument to the dynatree() function:
	  	$("#tree").dynatree({
	  		onActivate: function(node) {showTheDetail(node);},
	  		children: data
	  	});
	  }
	
	  function showTheDetail(node) {
	  	  $("#detail").show();
	  	  var properties = ['type', 'component', 'operation', 'request', 'response', 'fault', 'requestLatency', 'responseLatency', 'duration', 'percentage'];
	  	  var thedata = node.data;
	  	  deleteRows();
	  	  for(i = 0; i < properties.length; i++) {
	  	  	var theProperty = properties[i];
	  	  	if (thedata[theProperty] != undefined) {
	  	  		insertRow([theProperty + " :" , thedata[theProperty]]);
	  	  	}
	  	  }
	  }
	
	   function deleteRows() {
			var theBody, theSize, i;
			theBody = document.getElementById("detail-body");
			theSize = theBody.rows.length;
			for (i = 0; i < theSize; i++) {
				theBody.deleteRow(theBody.rows[i]);
			}
		}

	function insertRow(data) {
		var theBody, theRow, theHead, theCell, i;
		theBody = document.getElementById("detail-body");
		theRow = document.createElement("TR");
		theBody.appendChild(theRow);
		
		theHead = document.createElement("TH");
		theHead.innerHTML = data[0];
		theRow.appendChild(theHead);

		theCell = document.createElement("TD");
		theCell.innerHTML = data[1];
		theRow.appendChild(theCell);
	}
	
	function getTruncatedTitle(title) {
		if (title.length < 20) return title;
		else return title.substring(0, 20) + "...";
	}

	function escapeHTML(str) {
		if (str == undefined) return;
   		else return str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
	}
	
	function loadData() {
         var prefs, refreshInterval, tabset, theName;
         prefs = new gadgets.Prefs();
         refreshInterval = prefs.getInt("refreshCycle")
         theName = getViewName();
         window.alert(theName);
         if (theName == "home") {
	         tabset = new gadgets.TabSet();
	         tabset.alignTabs('left');
	         tabset.addTab("Call Trace Tree", {contentContainer:document.getElementById("tree")});
	         tabset.addTab("Summary", {contentContainer:document.getElementById("detail")});
	         window.alert("done");
         }
         makeJSONRequest();
         setInterval(makeJSONRequest, refreshInterval * 1000);
    }
    
    function getViewName() {
  		return gadgets.views.getCurrentView().getName();
	}

    gadgets.util.registerOnLoadHandler(loadData);

   </script>
   
  	<div id="tree"></div>
  	<div id="detail">
		<table style="width:100%" summary="Summary">
			<thead><tr><th width="30%">Summary</th><th></th></tr></thead>
			<tbody id="detail-body">						
			</tbody>
	   </table>
  	</div>
]]>
	</Content>
</Module>
