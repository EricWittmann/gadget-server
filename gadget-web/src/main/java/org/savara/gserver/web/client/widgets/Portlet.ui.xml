<ui:UiBinder xmlns:ui='urn:ui:com.google.gwt.uibinder'
             xmlns:g='urn:import:com.google.gwt.user.client.ui'>

    <g:FlowPanel styleName="portlet ui-widget ui-widget-content ui-helper-clearfix ui-corner-all">
         <g:FlowPanel styleName="portlet-header ui-widget-header ui-corner-all">
              <g:InlineLabel ui:field="title" ></g:InlineLabel>
              <g:InlineLabel ui:field="minBtn" styleName="ui-icon ui-icon-minusthick portlet-min"></g:InlineLabel>
              <g:InlineLabel ui:field="settingsBtn" styleName="ui-icon ui-icon-gear portlet-settings"></g:InlineLabel>
              <g:FlowPanel styleName="portlet-menu">
                  <g:InlineLabel>Edit settings</g:InlineLabel>
                  <g:InlineLabel>Delete this gadget</g:InlineLabel>
                  <g:InlineLabel>Maximize this gadget</g:InlineLabel>
              </g:FlowPanel>
         </g:FlowPanel>
         <g:FlowPanel ui:field="userPreference">
         </g:FlowPanel>
         <g:FlowPanel styleName="portlet-content">
              <!--iframe ui:field="gadgetSpecUrl" scrolling="no" marginwidth="0" frameborder="0"></iframe-->
             <g:Label>
             At heart, a GWT application is a web page. And when you're laying out a web page, writing HTML and CSS is
             the most natural way to get the job done. The UiBinder framework allows you to do exactly that:
             build your apps as HTML pages with GWT widgets sprinkled throughout them.
             Besides being a more natural and concise way to build your UI than doing it through code,
             UiBinder can also make your app more efficient. Browsers are better at building DOM structures
             by cramming big strings of HTML into innerHTML attributes than by a bunch of API calls.
             UiBinder naturally takes advantage of this, and the result is that the most pleasant way
             to build your app is also the best way to build it.
             </g:Label>
         </g:FlowPanel>
    </g:FlowPanel>

</ui:UiBinder>